name: Auto-generating and assembling main documentation (Sphinx)

on:
  workflow_call:
    inputs:
      ubuntu_image:
        description: 'Name of the Ubuntu image.'
        required: false
        default: 'ubuntu-24.04'
        type: string
      ghdl_artifact:
        description: 'Name of the GHDL artifact for Ubuntu.'
        required: true
        type: string
      python_version:
        description: 'Python version.'
        required: false
        default: '3.12'
        type: string
      requirements:
        description: 'Python dependencies to be installed through pip.'
        required: false
        default: '-r doc/requirements.txt'
        type: string
      doc_directory:
        description: 'Path to the directory containing documentation (Sphinx working directory).'
        required: false
        default: 'doc'
        type: string
      html_artifact:
        description: 'Name of the HTML documentation artifact.'
        required: false
        default: ''
        type: string
      latex_document:
        description: 'LaTeX root document without *.tex extension.'
        required: true
        type: string
      latex_artifact:
        description: 'Name of the LaTeX documentation artifact.'
        required: false
        default: ''
        type: string
      pdf_artifact:
        description: 'Name of the PDF documentation artifact.'
        required: false
        default: ''
        type: string

jobs:
  HTML:
    name: '📓 Sphinx to HTML'
    runs-on: ${{ inputs.ubuntu_image }}

    if: inputs.html_artifact != ''

    steps:
      - name: '⏬ Checkout'
        uses: actions/checkout@v5

      - name: 📥 Download artifacts '${{ inputs.ghdl_artifact }}' from 'Build' job
        uses: pyTooling/download-artifact@v6
        with:
          name: ${{ inputs.ghdl_artifact }}
          path: install

      - name: Prepare test environment
        run: |
          cp -r -v ./install/lib/* pyGHDL/lib
          sudo xargs --no-run-if-empty -a ./install/ubuntu.requirements -- apt-get install -y --no-install-recommends
          echo "PATH=$(pwd)/install/bin:$PATH" >> $GITHUB_ENV

      - name: Version check
        run: |
          echo "which ghdl: $(which ghdl)"
          ghdl version

      - name: '🐍 Setup Python'
        uses: actions/setup-python@v6
        with:
          python-version: ${{ inputs.python_version }}

      - name: '🔧 Install dependencies'
        run: |
          sudo xargs --no-run-if-empty -a ./doc/ubuntu.requirements -- apt-get install -y --no-install-recommends
          python -m pip install --disable-pip-version-check ${{ inputs.requirements }}

      - name: '📓 Compile HTML documentation'
        if: inputs.html_artifact != ''
        run: |
          cd ${{ inputs.doc_directory }}
          make html

      - name: '📤 Upload artifact: HTML'
        uses: pyTooling/upload-artifact@v4
        if: inputs.html_artifact != ''
        with:
          name: ${{ inputs.html_artifact }}
          working-directory: doc/_build/html
          path: "*"

  LaTeX:
    name: '📓 Sphinx to LaTeX'
    runs-on: ${{ inputs.ubuntu_image }}

    if: inputs.latex_artifact != ''

    steps:
      - name: '⏬ Checkout'
        uses: actions/checkout@v5

      - name: 📥 Download artifacts '${{ inputs.ghdl_artifact }}' from 'Build' job
        uses: pyTooling/download-artifact@v6
        with:
          name: ${{ inputs.ghdl_artifact }}
          path: install

      - name: Prepare test environment
        run: |
          cp -r -v ./install/lib/* pyGHDL/lib
          sudo xargs --no-run-if-empty -a ./install/ubuntu.requirements -- apt-get install -y --no-install-recommends
          echo "PATH=$(pwd)/install/bin:$PATH" >> $GITHUB_ENV

      - name: Version check
        run: |
          echo "which ghdl: $(which ghdl)"
          ghdl version

      - name: '🐍 Setup Python'
        uses: actions/setup-python@v6
        with:
          python-version: ${{ inputs.python_version }}

      - name: '🔧 Install dependencies'
        run: |
          sudo xargs --no-run-if-empty -a ./doc/ubuntu.requirements -- apt-get install -y --no-install-recommends
          python -m pip install --disable-pip-version-check ${{ inputs.requirements }}

      - name: '📓 Compile LaTeX documentation'
        if: inputs.latex_artifact != ''
        run: |
          cd ${{ inputs.doc_directory }}
          make latex

      - name: '📤 Upload artifact: LaTeX'
        uses: pyTooling/upload-artifact@v4
        if: inputs.latex_artifact != ''
        with:
          name: ${{ inputs.latex_artifact }}
          working-directory: doc/_build/latex
          path: "*"

  PDF:
    name: 📓 Converting LaTeX Documentation to PDF
    runs-on: ${{ inputs.ubuntu_image }}
    needs:
      - LaTeX

    if: inputs.latex_artifact != '' && inputs.pdf_artifact != ''

    steps:
      - name: 📥 Download artifacts '${{ inputs.latex_artifact }}' from 'Sphinx' job
        uses: pyTooling/download-artifact@v6
        with:
          name: ${{ inputs.latex_artifact }}
          path: latex

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@master
        with:
          working_directory: latex
          root_file: ${{ inputs.latex_document }}.tex

      - name: 📤 Upload 'PDF Documentation' artifact
        uses: pyTooling/upload-artifact@v4
        if: inputs.pdf_artifact != ''
        with:
          name: ${{ inputs.pdf_artifact }}
          path: ${{ inputs.document }}.pdf
          if-no-files-found: error
          retention-days: 7
