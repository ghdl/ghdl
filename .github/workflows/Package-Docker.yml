name: Package GHDL as Docker Image

on:
  workflow_call:
    inputs:
      ubuntu_image:
        description: 'Name of the Ubuntu image.'
        required: false
        default: 'ubuntu-24.04'
        type: string
      ghdl_artifact:
        description: 'Name of the GHDL artifact.'
        required: true
        type: string
      ubuntu_version:
        description: 'Version of used Ubuntu for the artifact.'
        required: true
        type: string
      ghdl_backend:
        description: 'GHDL backend.'
        required: true
        type: string
      ghdl_version:
        description: 'GHDL version.'
        required: true
        type: string
      publish:
        description: 'Publish Docker image to Docker Hub.'
        required: false
        default: true
        type: boolean
      dockerhub_image:
        description: 'Docker Hub image name.'
        required: false
        default: 'ghdl'
        type: string
      testsuites:
        description: 'GHDL testsuites'
        required: true
        type: string

jobs:
  Ubuntu:
    name: Package GHDL as Docker Image
    runs-on: ${{ inputs.ubuntu_image }}
    outputs:
      ghdl_image: ${{ steps.build.outputs.ghdl_image }}

    defaults:
      run:
        shell: bash

    steps:
      - name: ‚è¨ Checkout repository
        uses: actions/checkout@v5

      - name: üì• Download artifacts '${{ inputs.ghdl_artifact }}' from 'Build' job
        uses: pyTooling/download-artifact@v4
        with:
          name: ${{ inputs.ghdl_artifact }}
          path: dist/docker/install

      - name: üêã Building GHDL image
        id: build
        run: |
          base="ubuntu:${{ inputs.ubuntu_version }}"
          base_image=${base%:*}
          base_image_tag=${base#*:}

          image_ns="${{ vars.DOCKERHUB_NAMESPACE }}"
          image_name="${{ inputs.dockerhub_image }}"
          image_tag="${{ inputs.ghdl_version }}-${{ inputs.ghdl_backend }}-${base_image}-${base_image_tag}"
          image="${image_ns}/${image_name}:${image_tag}"

          tee "${GITHUB_OUTPUT}" <<EOF
          ghdl_image_ns=${image_ns}
          ghdl_image_name=${image_name}
          ghdl_image_tag=${image_tag}
          ghdl_image=${image}
          EOF

          dockerfile="./dist/docker/Dockerfile.${base_image}"
          githubOrg="${{ github.repository_owner }}"
          githubRepo="${{ github.repository }}"
          githubRepo="${githubRepo##*/}"
          githubUrl="${{ github.server_url }}/${{ github.repository }}"
          githubDoc="https://${githubOrg}.github.io/${githubRepo}/"
          printf "Building docker file '%s' ...\n" "${dockerfile}"
          docker buildx build \
            --file "${dockerfile}" \
            --build-arg IMAGE=${base_image} \
            --build-arg IMAGE_TAG=${base_image_tag} \
            --build-arg GHDL_VERSION=${{ inputs.ghdl_version }} \
            --build-arg GHDL_BACKEND=${{ inputs.ghdl_backend }} \
            --label "org.opencontainers.image.vendor=Tristan Gingold and contributors" \
            --label "org.opencontainers.image.authors=Tristan Gingold <tgingold@free.fr>" \
            --label "org.opencontainers.image.url=${githubUrl}" \
            --label "org.opencontainers.image.documentation=${githubDoc}" \
            --label "org.opencontainers.image.source=${{ github.repositoryUrl }}" \
            --label "org.opencontainers.image.revision=${{ github.sha }}" \
            --label "org.opencontainers.image.version=${{ inputs.ghdl_version }}" \
            --label "org.opencontainers.image.description=GHDL ${{ inputs.ghdl_version }} - ${{ inputs.ghdl_backend }}" \
            --tag "ghdl:current" \
            ./dist/docker

          printf "Entrypoint: %s\n" "$(docker inspect -f '{{.Config.Entrypoint}}' ghdl:current)"
          printf "Cmd:        %s\n" "$(docker inspect -f '{{.Config.Cmd}}'        ghdl:current)"
          printf "Image labels:\n"
          docker inspect ghdl:current | jq -r '.[0].Config.Labels | to_entries | map("  " + .key + "=" + .value) | join("\n")'

          printf "Docker image 'ghdl:current' has %s\n" "$(docker image inspect ghdl:current --format='{{.Size}}' | numfmt --to=iec --format '%.2f')"

      - name: ‚òë Checking GHDL image 'ghdl:current'
        run: |
          docker container run --rm ghdl:current /bin/bash -c 'printf "ActiveShell: %s (%s)\n" "$(readlink /proc/$$/exe)" "${BASH_VERSION}"; printf "which ghdl: %s\n" "$(which ghdl)"; ghdl version'

      - name: üîë Login and push to Docker Hub
        if: inputs.publish
        run: |
          printf "%s" "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ vars.DOCKERHUB_USERNAME }} --password-stdin
          docker image tag ghdl:current ${{ steps.build.outputs.ghdl_image }}

          printf "Docker image '%s' has %s\n" "${{ steps.build.outputs.ghdl_image }}" "$(docker image inspect ${{ steps.build.outputs.ghdl_image }} --format='{{.Size}}' | numfmt --to=iec --format '%.2f')"
          docker image push ${{ steps.build.outputs.ghdl_image }}

      - name: üö¶ Testing GHDL image
        run: |
          docker container run --rm -v $(pwd):/data ghdl:current /bin/bash -c 'cd /data/testsuite; ./testsuite.sh ${{ inputs.testsuites }}'

  TestDocker:
    uses: ./.github/workflows/Test-Docker.yml
    needs:
      - Ubuntu
    if: inputs.publish
    with:
      os_image:     ${{ inputs.ubuntu_image }}
      ghdl_image:   ${{ needs.Ubuntu.outputs.ghdl_image }}
      ghdl_backend: ${{ inputs.ghdl_backend }}
      ghdl_version: ${{ inputs.ghdl_version }}
      testsuites:   ${{ inputs.testsuites }}
